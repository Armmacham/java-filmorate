CREATE TABLE IF NOT EXISTS Film
(
    film_id      int          NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(200) NOT NULL,
    description  varchar(200) NOT NULL,
    release_date date         NOT NULL,
    duration     int          NOT NULL,
    rating       int,
    rating_id    int          NOT NULL,
    CONSTRAINT pk_Film PRIMARY KEY (film_id)
);

CREATE TABLE IF NOT EXISTS Likes
(
    like_id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id int NOT NULL,
    film_id int NOT NULL,
    CONSTRAINT pk_Like PRIMARY KEY (like_id)
);

CREATE TABLE IF NOT EXISTS Users
(
    user_id  int          NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(200) NOT NULL,
    login    varchar(50)  NOT NULL,
    name     varchar(200) NOT NULL,
    birthday date         NOT NULL,
    CONSTRAINT pk_User PRIMARY KEY (user_id),
    CONSTRAINT uc_User_Email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS Friendship
(
    friendship_id int  NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id       int  NOT NULL,
    friend_id     int  NOT NULL,
    status        bool NOT NULL,
    CONSTRAINT pk_Friendship PRIMARY KEY (friendship_id)
);

CREATE TABLE IF NOT EXISTS GenreLine
(
    genre_line_id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id       int NOT NULL,
    genre_id      int NOT NULL,
    CONSTRAINT pk_GenreLine PRIMARY KEY (genre_line_id)
);

CREATE TABLE IF NOT EXISTS Genre
(
    genre_id int          NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     varchar(200) NOT NULL,
    CONSTRAINT pk_Genre PRIMARY KEY (genre_id),
    CONSTRAINT uc_Genre_Name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS RatingMPA
(
    rating_id   int          NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar(10)  NOT NULL,
    description varchar(200) NOT NULL,
    CONSTRAINT pk_RatingMPA PRIMARY KEY (rating_id),
    CONSTRAINT uc_RatingMPA_Name UNIQUE (name)
);

ALTER TABLE Film
    ADD CONSTRAINT IF NOT EXISTS fk_Film_RatingID FOREIGN KEY (rating_id)
        REFERENCES RatingMPA (rating_id) ON DELETE RESTRICT;

ALTER TABLE Likes
    ADD CONSTRAINT IF NOT EXISTS fk_Like_UserID FOREIGN KEY (user_id)
        REFERENCES Users (user_id);

ALTER TABLE Likes
    ADD CONSTRAINT IF NOT EXISTS fk_Like_FilmID FOREIGN KEY (film_id)
        REFERENCES Film (film_id) ON DELETE CASCADE;

ALTER TABLE Friendship
    ADD CONSTRAINT IF NOT EXISTS fk_Friendship_UserID FOREIGN KEY (user_id)
        REFERENCES Users (user_id);

ALTER TABLE Friendship
    ADD CONSTRAINT IF NOT EXISTS fk_Friendship_FriendID FOREIGN KEY (friend_id)
        REFERENCES Users (user_id);

ALTER TABLE GenreLine
    ADD CONSTRAINT IF NOT EXISTS fk_GenreLine_FilmID FOREIGN KEY (film_id)
        REFERENCES Film (film_id) ON DELETE CASCADE;

ALTER TABLE GenreLine
    ADD CONSTRAINT IF NOT EXISTS fk_GenreLine_GenreID FOREIGN KEY (genre_id)
        REFERENCES Genre (genre_id) ON DELETE RESTRICT;

ALTER TABLE GENRELINE
    ADD CONSTRAINT IF NOT EXISTS UC_GenreLine_GenreID_FilmID UNIQUE (genre_id, film_id)
